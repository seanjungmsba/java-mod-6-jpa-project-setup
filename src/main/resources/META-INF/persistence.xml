<persistence xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://java.sun.com/xml/ns/persistence
                         http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd"
             version="2.0" xmlns="http://java.sun.com/xml/ns/persistence">

    <!-- <persistence-unit>: defines a single database your app will connect to -->
    <persistence-unit name="example" transaction-type="RESOURCE_LOCAL">
        <!-- <provider>: defines the implementation of JPA that the app will be using -->
        <provider>org.hibernate.ejb.HibernatePersistence</provider>
        <properties>

            <!-- The properties under the “connect to database” comment defines the url, driver, username, and password for connecting to the database.
            The URL we are using is for connecting to the H2 database in server mode.
            It would be different if we were using the in-memory mode -->

            <!-- connect to database -->
            <property name="javax.persistence.jdbc.url" value="jdbc:h2:tcp://localhost/~/test" />
            <property name="javax.persistence.jdbc.driver" value="org.h2.Driver" />
            <property name="javax.persistence.jdbc.user" value="sa" />
            <property name="javax.persistence.jdbc.password" value="" />

            <!-- configure behavior -->
            <property name="hibernate.show_sql" value="true"/>
            <property name="hibernate.format_sql" value="true"/>
            <property name="hibernate.dialect" value="org.hibernate.dialect.H2Dialect"/>
            <!-- We will be using the create value to create and insert data into the database and
            then use the update value for reading, updating, and deleting data.-->
            <!-- We will be using the update value for the hbm2ddl property
            because often times you will have to read from an existing database -->
            <property name="hibernate.hbm2ddl.auto" value="create" />
            <!-- hibernate.show_sql: shows the SQL queries performed in the terminal.
                 hibernate.format_sql: formats SQL queries in the terminal to display them in an easier to read format.
                 hibernate.dialect: defines the type of database which ensures database compatible SQL queries are generated.
                 hibernate.hbm2ddl.auto: defines initial startup behavior for database -->

        </properties>
    </persistence-unit>
</persistence>